plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    //para anotar clases parcelables
    id 'kotlin-parcelize'
    //para dagger hilt u otra depende cia que necesite anotaciones
    id 'kotlin-kapt'
    //dagger hilt
    id 'dagger.hilt.android.plugin'
}

def dagger_hilt_version = "2.44"
def retrofit_version = "2.9.0"
def glide_version = "4.14.2"

def nav_version = "2.5.3"
def room_version = "2.4.3"
def okhttp3_version = "4.9.1"
def lifecycle_version = "2.5.1"
def ktx_version = "1.6.1"
def coroutine_version = "1.6.1"
def fragment_version = "1.5.5"
android {
    namespace 'com.barryzeha.appci'
    compileSdk 33

    defaultConfig {
        applicationId "com.barryzeha.appci"
        minSdk 21
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildFeatures{
        viewBinding = true;
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.5.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    //Para testear los liveData
    testImplementation 'androidx.arch.core:core-testing:2.2.0'

    //Dagger hilt
    implementation "com.google.dagger:hilt-android:$dagger_hilt_version"
    kapt "com.google.dagger:hilt-compiler:$dagger_hilt_version"

    //Retrofit & okhttp
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp3_version"
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"

    //Glide
    implementation "com.github.bumptech.glide:glide:$glide_version"
    kapt "com.github.bumptech.glide:compiler:$glide_version"

    //Activity an fragment ktx
    implementation "androidx.activity:activity-ktx:$ktx_version"
    implementation "androidx.fragment:fragment-ktx:$fragment_version"

    //Navigation component
    implementation "androidx.navigation:navigation-fragment:$nav_version"
    implementation "androidx.navigation:navigation-ui:$nav_version"

    //Room
    implementation "androidx.room:room-runtime:$room_version"
    //kapt -> annotationProcessor  in java
    kapt "androidx.room:room-compiler:$room_version"
    // optional - Kotlin Extensions and Coroutines support for Room
    //remove "-ktx"  of implementation in java
    implementation "androidx.room:room-ktx:$room_version"

    //viewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    //liveData
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"

    //coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutine_version"
    //coroutines for test
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutine_version"

    //Mock para testing
    testImplementation "io.mockk:mockk:1.12.2"
}
kapt {
    correctErrorTypes = true
}